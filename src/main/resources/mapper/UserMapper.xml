<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.nj.secretary.services.user.service.UserService">

    <resultMap id="userSelectMap" type="com.nj.secretary.services.user.domain.User">

        <result property="userId" column="user_id" jdbcType="VARCHAR"/>
        <result property="withdrawalReasonId" column="withdrawal_reason_id" jdbcType="INTEGER"/>
        <result property="motto" column="motto" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="role" column="role" jdbcType="VARCHAR"/>
        <result property="isAlarmDiary" column="is_alarm_diary" jdbcType="CHAR"/>
        <result property="isAlarmMonologue" column="is_alarm_monologue" jdbcType="CHAR"/>
        <result property="userName" column="user_name" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="blindCount" column="blind_count" jdbcType="INTEGER"/>
        <result property="withdrawalDate" column="withdrawal_date" jdbcType="DATE"/>
        <result property="withdrawalStatus" column="withdrawal_status" jdbcType="CHAR"/>
        <result property="limitStartDate" column="limit_start_date" jdbcType="DATE"/>
        <result property="isDisplayTime" column="is_display_time" jdbcType="CHAR"/>
        <result property="isDisplayWeather" column="is_display_weather" jdbcType="CHAR"/>
        <result property="isDisplayLocation" column="is_display_location" jdbcType="CHAR"/>

    </resultMap>

    <insert id="addUser" parameterType="com.nj.secretary.services.user.domain.User">

        insert into
        USERS(user_id, user_name, password, nickname, email)
        values(#{userId},#{userName},#{password},#{nickname},#{email})

    </insert>

    <select id="getUser" parameterType="string" resultType="com.nj.secretary.services.user.domain.User">

        select user_name, user_id, password, nickname, email
        from users
        where user_Id=#{userId}

    </select>

    <select id="idCheck" parameterType="string" resultType="Integer">

        select count(*)
        from users
        where user_id=#{userId}

    </select>

    <select id="findUserId" parameterType="string" resultType="com.nj.secretary.services.user.domain.User">
    select user_Id, user_name, email
    from users
    where user_name=#{userName}
    </select>

</mapper>